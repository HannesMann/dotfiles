From 7aae9a5b216ad7d5b6004976e893a05d860c4484 Mon Sep 17 00:00:00 2001
From: Hannes Mann <hannesmann2000@gmail.com>
Date: Sun, 16 Jun 2024 04:33:21 +0200
Subject: [PATCH 1/3] libobs-opengl: Use EGL_IMG_context_priority

---
 UI/cmake/legacy.cmake             |  2 ++
 UI/cmake/os-linux.cmake           |  2 +-
 UI/window-basic-main.cpp          | 23 +++++++++++++++++++++++
 deps/glad/include/glad/glad_egl.h |  8 ++++++++
 deps/glad/src/glad_egl.c          |  1 +
 libobs-opengl/gl-wayland-egl.c    | 14 ++++++++++++++
 libobs-opengl/gl-x11-egl.c        | 12 ++++++++++++
 7 files changed, 61 insertions(+), 1 deletion(-)

diff --git a/UI/cmake/legacy.cmake b/UI/cmake/legacy.cmake
index 709e9c7ab..0cbf66b5b 100644
--- a/UI/cmake/legacy.cmake
+++ b/UI/cmake/legacy.cmake
@@ -505,6 +505,8 @@ elseif(OS_POSIX)
   endif()
 
   if(OS_LINUX)
+    target_link_libraries(obs PRIVATE cap)
+
     if(USE_XDG)
       target_compile_definitions(obs PRIVATE USE_XDG)
     endif()
diff --git a/UI/cmake/os-linux.cmake b/UI/cmake/os-linux.cmake
index a8c08080f..492c2db20 100644
--- a/UI/cmake/os-linux.cmake
+++ b/UI/cmake/os-linux.cmake
@@ -1,6 +1,6 @@
 target_sources(obs-studio PRIVATE platform-x11.cpp)
 target_compile_definitions(obs-studio PRIVATE USE_XDG OBS_INSTALL_PREFIX="${OBS_INSTALL_PREFIX}")
-target_link_libraries(obs-studio PRIVATE Qt::GuiPrivate Qt::DBus)
+target_link_libraries(obs-studio PRIVATE Qt::GuiPrivate Qt::DBus cap)
 
 target_sources(obs-studio PRIVATE system-info-posix.cpp)
 
diff --git a/UI/window-basic-main.cpp b/UI/window-basic-main.cpp
index 8f5fc43c1..6445df3cc 100644
--- a/UI/window-basic-main.cpp
+++ b/UI/window-basic-main.cpp
@@ -106,6 +106,11 @@
 #include <obs-nix-platform.h>
 #endif
 
+#ifdef __linux__
+#include <sys/capability.h>
+#include <sys/prctl.h>
+#endif
+
 using namespace std;
 
 #ifdef BROWSER_AVAILABLE
@@ -2137,6 +2142,24 @@ void OBSBasic::OBSInit()
 			throw UNKNOWN_ERROR;
 	}
 
+#ifdef __linux__
+	cap_t caps = cap_get_proc();
+
+	if (caps) {
+		cap_value_t capToRemove = CAP_SYS_NICE;
+
+		/* Drop CAP_SYS_NICE after EGL context has been created */
+		cap_set_flag(caps, CAP_EFFECTIVE, 1, &capToRemove, CAP_CLEAR);
+		cap_set_flag(caps, CAP_PERMITTED, 1, &capToRemove, CAP_CLEAR);
+
+		cap_set_proc(caps);
+		cap_free(caps);
+
+		/* Reset permissions of proc filesystem (for PipeWire) */
+		prctl(PR_SET_DUMPABLE, 1);
+	}
+#endif
+
 	/* load audio monitoring */
 	if (obs_audio_monitoring_available()) {
 		const char *device_name = config_get_string(
diff --git a/deps/glad/include/glad/glad_egl.h b/deps/glad/include/glad/glad_egl.h
index b50315a9b..b0d8f03d3 100644
--- a/deps/glad/include/glad/glad_egl.h
+++ b/deps/glad/include/glad/glad_egl.h
@@ -15,6 +15,7 @@
         EGL_EXT_platform_wayland,
         EGL_EXT_platform_x11,
         EGL_EXT_platform_xcb,
+        EGL_IMG_context_priority,
         EGL_KHR_create_context,
         EGL_KHR_image_base,
         EGL_KHR_image_pixmap,
@@ -364,6 +365,10 @@ EGLBoolean eglWaitSync(EGLDisplay dpy, EGLSync sync, EGLint flags);
 #define EGL_PLATFORM_X11_SCREEN_EXT 0x31D6
 #define EGL_PLATFORM_XCB_EXT 0x31DC
 #define EGL_PLATFORM_XCB_SCREEN_EXT 0x31DE
+#define EGL_CONTEXT_PRIORITY_LEVEL_IMG 0x3100
+#define EGL_CONTEXT_PRIORITY_HIGH_IMG 0x3101
+#define EGL_CONTEXT_PRIORITY_MEDIUM_IMG 0x3102
+#define EGL_CONTEXT_PRIORITY_LOW_IMG 0x3103
 #define EGL_CONTEXT_MAJOR_VERSION_KHR 0x3098
 #define EGL_CONTEXT_MINOR_VERSION_KHR 0x30FB
 #define EGL_CONTEXT_FLAGS_KHR 0x30FC
@@ -434,6 +439,9 @@ GLAPI PFNEGLCREATEPLATFORMPIXMAPSURFACEEXTPROC glad_eglCreatePlatformPixmapSurfa
 #ifndef EGL_EXT_platform_xcb
 #define EGL_EXT_platform_xcb 1
 #endif
+#ifndef EGL_IMG_context_priority
+#define EGL_IMG_context_priority 1
+#endif
 #ifndef EGL_KHR_create_context
 #define EGL_KHR_create_context 1
 #endif
diff --git a/deps/glad/src/glad_egl.c b/deps/glad/src/glad_egl.c
index 2b9b547bb..ceb62b036 100644
--- a/deps/glad/src/glad_egl.c
+++ b/deps/glad/src/glad_egl.c
@@ -15,6 +15,7 @@
         EGL_EXT_platform_wayland,
         EGL_EXT_platform_x11,
         EGL_EXT_platform_xcb,
+        EGL_IMG_context_priority,
         EGL_KHR_create_context,
         EGL_KHR_image_base,
         EGL_KHR_image_pixmap,
diff --git a/libobs-opengl/gl-wayland-egl.c b/libobs-opengl/gl-wayland-egl.c
index 913ca3c3a..9066c4730 100644
--- a/libobs-opengl/gl-wayland-egl.c
+++ b/libobs-opengl/gl-wayland-egl.c
@@ -65,6 +65,8 @@ static const EGLint ctx_attribs[] = {
 	3,
 	EGL_CONTEXT_MINOR_VERSION,
 	3,
+	EGL_CONTEXT_PRIORITY_LEVEL_IMG,
+	EGL_CONTEXT_PRIORITY_HIGH_IMG,
 	EGL_NONE};
 
 static const EGLint khr_ctx_attribs[] = {
@@ -78,6 +80,8 @@ static const EGLint khr_ctx_attribs[] = {
 	3,
 	EGL_CONTEXT_MINOR_VERSION_KHR,
 	3,
+	EGL_CONTEXT_PRIORITY_LEVEL_IMG,
+	EGL_CONTEXT_PRIORITY_HIGH_IMG,
 	EGL_NONE};
 
 struct gl_windowinfo {
@@ -229,6 +233,16 @@ static struct gl_platform *gl_wayland_egl_platform_create(gs_device_t *device,
 		goto fail_context_create;
 	}
 
+	EGLint priority = EGL_CONTEXT_PRIORITY_MEDIUM_IMG;
+	eglQueryContext(plat->display, plat->context,
+			EGL_CONTEXT_PRIORITY_LEVEL_IMG, &priority);
+
+	if (priority != EGL_CONTEXT_PRIORITY_HIGH_IMG) {
+		blog(LOG_WARNING, "Failed to set context priority");
+	} else {
+		blog(LOG_INFO, "Set context priority to EGL_CONTEXT_PRIORITY_HIGH_IMG");
+	}
+
 	if (!gladLoadGL()) {
 		blog(LOG_ERROR, "Failed to load OpenGL entry functions.");
 		goto fail_load_gl;
diff --git a/libobs-opengl/gl-x11-egl.c b/libobs-opengl/gl-x11-egl.c
index 9b200d1b6..294be2785 100644
--- a/libobs-opengl/gl-x11-egl.c
+++ b/libobs-opengl/gl-x11-egl.c
@@ -48,6 +48,8 @@ static const int ctx_attribs[] = {
 	3,
 	EGL_CONTEXT_MINOR_VERSION,
 	3,
+	EGL_CONTEXT_PRIORITY_LEVEL_IMG,
+	EGL_CONTEXT_PRIORITY_HIGH_IMG,
 	EGL_NONE,
 };
 
@@ -226,6 +228,16 @@ static bool gl_context_create(struct gl_platform *plat)
 		goto error;
 	}
 
+	EGLint priority = EGL_CONTEXT_PRIORITY_MEDIUM_IMG;
+	eglQueryContext(edisplay, context, EGL_CONTEXT_PRIORITY_LEVEL_IMG,
+			&priority);
+
+	if (priority != EGL_CONTEXT_PRIORITY_HIGH_IMG) {
+		blog(LOG_WARNING, "Failed to set context priority");
+	} else {
+		blog(LOG_INFO, "Set context priority to EGL_CONTEXT_PRIORITY_HIGH_IMG");
+	}
+
 	plat->pbuffer =
 		eglCreatePbufferSurface(edisplay, config, ctx_pbuffer_attribs);
 	if (EGL_NO_SURFACE == plat->pbuffer) {
-- 
2.45.2

