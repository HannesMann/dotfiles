From 5210cd768b289721903508927b487cdf054db043 Mon Sep 17 00:00:00 2001
From: Hannes Mann <hannesmann2000@gmail.com>
Date: Wed, 13 Dec 2023 23:47:39 +0100
Subject: [PATCH 4/4] Don't scale internal windows in effects

---
 src/effects.cpp                                 | 6 ++++++
 src/effects.h                                   | 2 ++
 src/effects/glide/glide.cpp                     | 3 ++-
 src/effects/scale/package/contents/code/main.js | 3 ++-
 src/libkwineffects/kwineffects.h                | 7 +++++++
 5 files changed, 19 insertions(+), 2 deletions(-)

diff --git a/src/effects.cpp b/src/effects.cpp
index 3029b47e95..9823605d64 100644
--- a/src/effects.cpp
+++ b/src/effects.cpp
@@ -2004,6 +2004,7 @@ EffectWindowImpl::EffectWindowImpl(Window *window)
 
     m_waylandWindow = qobject_cast<KWin::WaylandWindow *>(window) != nullptr;
     m_x11Window = qobject_cast<KWin::X11Window *>(window) != nullptr || qobject_cast<KWin::Unmanaged *>(window) != nullptr;
+    m_internalWindow = qobject_cast<KWin::InternalWindow *>(window) != nullptr;
 }
 
 EffectWindowImpl::~EffectWindowImpl()
@@ -2245,6 +2246,11 @@ QWindow *EffectWindowImpl::internalWindow() const
     return nullptr;
 }
 
+bool EffectWindowImpl::isInternal() const
+{
+    return m_internalWindow;
+}
+
 template<typename T>
 EffectWindowList getMainWindows(T *c)
 {
diff --git a/src/effects.h b/src/effects.h
index db4a7a3864..faa08fc8e8 100644
--- a/src/effects.h
+++ b/src/effects.h
@@ -490,6 +490,7 @@ public:
     void unreferencePreviousWindowPixmap() override;
 
     QWindow *internalWindow() const override;
+    bool isInternal() const override;
 
     const Window *window() const;
     Window *window();
@@ -513,6 +514,7 @@ private:
     bool managed = false;
     bool m_waylandWindow;
     bool m_x11Window;
+    bool m_internalWindow;
 };
 
 class EffectWindowGroupImpl
diff --git a/src/effects/glide/glide.cpp b/src/effects/glide/glide.cpp
index 5f56e41474..d7f0cdece2 100644
--- a/src/effects/glide/glide.cpp
+++ b/src/effects/glide/glide.cpp
@@ -312,7 +312,8 @@ bool GlideEffect::isGlideWindow(EffectWindow *w) const
     // to use a heuristic: if a window has decoration, then it's most
     // likely a dialog or a settings window so we have to animate it.
     if (w->windowClass() == QLatin1String("plasmashell plasmashell")
-        || w->windowClass() == QLatin1String("plasmashell org.kde.plasmashell")) {
+        || w->windowClass() == QLatin1String("plasmashell org.kde.plasmashell")
+        || w->isInternal()) {
         return w->hasDecoration();
     }
 
diff --git a/src/effects/scale/package/contents/code/main.js b/src/effects/scale/package/contents/code/main.js
index 32a3b2e652..b9cfd99bd5 100644
--- a/src/effects/scale/package/contents/code/main.js
+++ b/src/effects/scale/package/contents/code/main.js
@@ -49,7 +49,8 @@ class ScaleEffect {
         // to use a heuristic: if a window has decoration, then it's most
         // likely a dialog or a settings window so we have to animate it.
         if (window.windowClass == "plasmashell plasmashell"
-                || window.windowClass == "plasmashell org.kde.plasmashell") {
+                || window.windowClass == "plasmashell org.kde.plasmashell"
+                || window.internal) {
             return window.hasDecoration;
         }
 
diff --git a/src/libkwineffects/kwineffects.h b/src/libkwineffects/kwineffects.h
index b14a9d12e5..74dd30a342 100644
--- a/src/libkwineffects/kwineffects.h
+++ b/src/libkwineffects/kwineffects.h
@@ -2326,6 +2326,12 @@ class KWINEFFECTS_EXPORT EffectWindow : public QObject
      */
     Q_PROPERTY(QWindow *internalWindow READ internalWindow CONSTANT)
 
+    /**
+     * If this is an internal window. Specific to Wayland platform.
+     * NOTE: This property persists after EffectWindow::internalWindow is destroyed
+     */
+    Q_PROPERTY(bool internal READ isInternal CONSTANT)
+
     /**
      * Whether this EffectWindow represents the outline.
      *
@@ -2662,6 +2668,7 @@ public:
      * @since 5.16
      */
     virtual QWindow *internalWindow() const = 0;
+    virtual bool isInternal() const = 0;
 
     /**
      * @since 5.16
-- 
2.43.0

